df$TARGET_Adjusted <- NULL
#######
# EDA #
#######
str(df)
#######
# EDA #
#######
str(df)
hist (df$Gender)
plot(df$Gender)
plot(df$Marital)
ggplot(aes(x = Income), data = df) +
geom_histogram()
summary(df$Income)
hist(df$Hours)
df$Education <- NULL
ggplot(aes(x = Occupation), data  = df) +
geom_histogram(stat = "count")
ggplot(aes(x = Age, y = Income, fill = Gender), data = df) +
geom_jitter()
ggplot(aes(x = Age, y = Income, color = Gender), data = df) +
geom_jitter()
summary(df$Income)
# limit outliers
df$Income <- ifelse(df$Income > 150000, 150000, df$Income)
summary(df$Income)
ggplot(aes(x = Age, y = Income, color = Gender), data = df) +
geom_jitter()
ggplot(aes(x = Age, y = Income, color = Gender), data = df) +
geom_jitter(size = Age)
ggplot(aes(x = Age, y = Income, color = Gender), data = df) +
geom_jitter(size = Age*.01)
ggplot(aes(x = Age, y = Income, color = Gender), data = df) +
geom_jitter(size = Age*.1)
ggplot(aes(x = Age, y = Income, color = Gender), data = df) +
geom_jitter(size = Hours*.1)
ggplot(aes(x = Age, y = Income, color = Gender), data = df) +
geom_jitter(size = Hours*.05)
str(df)
df$Deductions <- NULL
sum(is.na(df$Gender))
df$Female <- ifelse(df$Gender == "Female", 1, 0)
str(df)
df$Gender <- NULL
str(dF)
str(df)
summary(df$Employment)
df$EMployment <-  NULL
str(df)
df$Employment <-  NULL
str(df)
summary(Marital)
df$Married <- ifelse(df$Marital == "Married", 1, 0)
df$Married <- ifelse(df$Marital == "Married" |
df$Marital == "Married-spouse-absent", 1, 0)
df$Single <- ifelse(df$Marital == "Divorced" |
df$Marital == "Unmarried" |
df$Marital == "Widowed", 1, 0)
df$absent <- ifelse(df$Marital == "Absent", 1, 0)
#############
str(df)
df$Marital <- NULL
str(df)
min_max_norm <- function(x) {
return((x - min(x))/(max(x) - min(x)))
}
summary(df$IGNORE_Accounts)
df$IGNORE_Accounts <- NULL
str(df)
df$Age_norm <- lapply(df$Age, min_max_norm())
df$Age_norm <- lapply(df$Age, min_max_norm(x))
df$Income_norm <- lapply(df$Income, min_max_norm)
df$Age_norm <- lapply(df$Age, min_max_norm)
str(df)
str(df)
View(df)
df_num <- df$c(Age, Income)
df_num <- df$c(Age, Income)
colnames(df)
df_num <- df$c("Age", "Income")
df_num <- df$c(1, 3)
min_max_norm <- function(x) {
return((x - min(x))/(max(x) - min(x)))
}
df_Age_n <- apply(df$Age, min_max_norm)
df_Age_n <- sapply(df$Age, min_max_norm)
df$Age_n <- sapply(df$Age, min_max_norm)
str(df)
names(df)
df$Age_norm <- NULL
df$Income_norm <- NULL
str(df)
df$Age_n <- sapply(df$Age, min_max_norm)
summary(df$Age_n)
min_max_norm <- function(x) {
return((x - min(x))/(max(x) - min(x)))
}
df$Age_n <- apply(df$Age, min_max_norm)
df$Age_n <- sapply(df$Age, min_max_norm)
sum(is.na(df$age))
sum(is.na(df$Age))
summary(df$Age)
min_max_norm <- function(x) {
return((x - min(x))/(max(x) - min(x)))
}
df$Age_n <- sapply(df$Age, min_max_norm)
df$Age_n
max(df$Age)
df$Age_n <- lapply(df$Age, min_max_norm)
str(df)
df$Age_n <- sapply(df$Age, min_max_norm)
str(df)
df[] , c(1, 3)
df[ , c(1, 3]
df[ , c(1, 3)]
df[ , c(1,3)] <- lapply(df[ , c(1, 3)], min_max_norm)
str(df)
df$Age_n <- NULL
library(rattle)
library(ggplot2)
df <-audit
#######
# EDA #
#######
str(df)
# remove unneeded cols
df$ID <- NULL
df$RISK_Adjustment <- NULL
df$TARGET_Adjusted <- NULL
df$Education <- NULL
df$Deductions <- NULL
df$Employment <-  NULL
df$IGNORE_Accounts <- NULL
# quick plots
hist(df$Age)
plot(df$Gender)
plot(df$Marital)
ggplot(aes(x = Education), data  = df) +
geom_histogram(stat = "count")
ggplot(aes(x = Occupation), data  = df) +
geom_histogram(stat = "count")
ggplot(aes(x = Income), data = df) +
geom_histogram()
hist(df$Hours)
ggplot(aes(x = Age, y = Income, color = Gender), data = df) +
geom_jitter(size = Hours*.05)
############
# Cleaning #
############
# limit outliers
df$Income <- ifelse(df$Income > 150000, 150000, df$Income)
# dummy out factors
sum(is.na(df$Gender))
df$Female <- ifelse(df$Gender == "Female", 1, 0)
df$Gender <- NULL
# marriage status
df$Married <- ifelse(df$Marital == "Married" |
df$Marital == "Married-spouse-absent", 1, 0)
df$Single <- ifelse(df$Marital == "Divorced" |
df$Marital == "Unmarried" |
df$Marital == "Widowed", 1, 0)
df$absent <- ifelse(df$Marital == "Absent", 1, 0)
df$Marital <- NULL
#############
str(df)
min_max_norm <- function(x) {
return((x - min(x))/(max(x) - min(x)))
}
df[ , c(1,3, 4)] <- lapply(df[ , c(1, 3, 4)], min_max_norm)
str(df)
# k-means
library(k_means)
# k-means
library(stats)
occupation <- df$Occupation
df$Occupation <- NULL
str(df)
summary(Occupation)
clusters <- kmeans(df, k = 5)
clusters <- kmeans(df, 5)
clusters$cluster
clusters$centers
clusters$size
head(clusters$cluster)
df$Cluster_id <- clusters$cluster
summary(df$Cluster_id)
head(df)
head(clusters$centers)
head(clusters$size)
# examine
head(clusters$centers)
# examine
head(clusters$cluster)
# examine
head(clusters$centers)
# examine
clusters$centers
ggplot(aes(x = Age, y = Income, color = Cluster_id), data = df) +
geom_jitter()
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id)), data = df) +
geom_jitter()
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id)), data = df) +
geom_jitter(shape = Female)
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id)), data = df) +
geom_jitter(shape = as.factor(Female))
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id), shape = as.factor(Female)),
data = df) +
geom_jitter()
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
clusters <- kmeans(df, 3)
clusters$centers
clusters$size
``
df$Cluster_id <- clusters$cluster
df$Cluster_id <- clusters$cluster
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
clusters <- kmeans(df, 7)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2) +
()
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
clusters <- kmeans(df, 5)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
# k-nn predict occupation
library(class)
# split test -train
train <- df[1:1500]
train <- df[ , 1:1500]
# split test -train
train <- df[1:1500, ]
test <- df[1501:2000, ]
y_train <- occupation[1:1500]
y_test <- occupation[1501:2000]
pred <- knn(train = train, test = test, cl = y_train, k = 5)
sum(is.na(occupation))
# remove na
df = as.data.frame(lapply(df, na.omit))
sum(is.na(df))
library(rattle)
library(ggplot2)
df <-audit
#######
# EDA #
#######
str(df)
# remove unneeded cols
df$ID <- NULL
df$RISK_Adjustment <- NULL
df$TARGET_Adjusted <- NULL
df$Education <- NULL
df$Deductions <- NULL
df$Employment <-  NULL
df$IGNORE_Accounts <- NULL
# quick plots
hist(df$Age)
plot(df$Gender)
plot(df$Marital)
ggplot(aes(x = Education), data  = df) +
geom_histogram(stat = "count")
ggplot(aes(x = Occupation), data  = df) +
geom_histogram(stat = "count")
ggplot(aes(x = Income), data = df) +
geom_histogram()
hist(df$Hours)
ggplot(aes(x = Age, y = Income, color = Gender), data = df) +
geom_jitter(size = Hours*.05)
############
# Cleaning #
############
# limit outliers
df$Income <- ifelse(df$Income > 150000, 150000, df$Income)
# dummy out factors
sum(is.na(df$Gender))
df$Female <- ifelse(df$Gender == "Female", 1, 0)
df$Gender <- NULL
# marriage status
df$Married <- ifelse(df$Marital == "Married" |
df$Marital == "Married-spouse-absent", 1, 0)
df$Single <- ifelse(df$Marital == "Divorced" |
df$Marital == "Unmarried" |
df$Marital == "Widowed", 1, 0)
df$absent <- ifelse(df$Marital == "Absent", 1, 0)
df$Marital <- NULL
sum(is.na(df))
df = as.data.frame(lapply(df, na.omit))
# remove na
df = as.data.frame(lapply(df, na.omit))
# remove na
df_new = as.data.frame(lapply(df, na.omit))
df = na.omit(df)
min_max_norm <- function(x) {
return((x - min(x))/(max(x) - min(x)))
}
df[ , c(1,3, 4)] <- lapply(df[ , c(1, 3, 4)], min_max_norm)
occupation <- df$Occupation
df$Occupation <- NULL
str(df)
###########
# Cluster #
###########
# k-means
library(stats)
clusters <- kmeans(df, 5)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
# split test -train
train <- df[1:1400, ]
test <- df[1401:1899, ]
y_train <- occupation[1:1400]
y_test <- occupation[1401:1899]
clusters <- kmeans(df, 3)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
clusters <- kmeans(df, 7)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
clusters <- kmeans(df, 4)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
clusters <- kmeans(df, 6)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
clusters <- kmeans(df, 3)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
clusters <- kmeans(df, 3)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
# split test -train
train <- df[1:1400, ]
test <- df[1401:1899, ]
y_train <- occupation[1:1400]
y_test <- occupation[1401:1899]
# k-nn predict occupation
library(class)
pred <- knn(train = train, test = test, cl = y_train, k = 21)
library(gmodels)
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)
confusionMatrix(pred, y_test)
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)
cor(pred, y_test)
head(CrossTable(x = y_test, y = pred, prop.chisq = FALSE))
pred <- knn(train = train, test = test, cl = y_train, k = 5)
head(CrossTable(x = y_test, y = pred, prop.chisq = FALSE))
pred
head(pred, 10)
head(pred, 15)
head(pred, 13)
head(pred, 8)
head(y_test, 8)
head(CrossTable(x = y_test, y = pred, prop.chisq = FALSE))
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)$prop.row
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)$prop.t
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)$prop.c
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)$prop.r
clusters <- kmeans(df, 14)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
train <- df[1:1400, ]
test <- df[1401:1899, ]
y_train <- occupation[1:1400]
y_test <- occupation[1401:1899]
# k-nn predict occupation
library(class)
library(gmodels)
pred <- knn(train = train, test = test, cl = y_train, k = 5)
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)$prop.r
head(pred, 8)
head(y_test, 8)
clusters <- kmeans(df, 7)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
train <- df[1:1400, ]
test <- df[1401:1899, ]
y_train <- occupation[1:1400]
y_test <- occupation[1401:1899]
# k-nn predict occupation
library(class)
library(gmodels)
pred <- knn(train = train, test = test, cl = y_train, k = 5)
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)$prop.r
head(pred, 8)
head(y_test, 8)
?CrossTable
CrossTable(x = y_test, y = pred, prop.chisq = FALSE, max.width = 5)$prop.r
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)$prop.r
summary(Occupation)
library(rattle)
library(ggplot2)
df <-audit
#######
# EDA #
#######
str(df)
# remove unneeded cols
df$ID <- NULL
df$RISK_Adjustment <- NULL
df$TARGET_Adjusted <- NULL
df$Education <- NULL
df$Deductions <- NULL
df$Employment <-  NULL
df$IGNORE_Accounts <- NULL
# quick plots
hist(df$Age)
plot(df$Gender)
plot(df$Marital)
ggplot(aes(x = Education), data  = df) +
geom_histogram(stat = "count")
ggplot(aes(x = Occupation), data  = df) +
geom_histogram(stat = "count")
ggplot(aes(x = Income), data = df) +
geom_histogram()
hist(df$Hours)
ggplot(aes(x = Age, y = Income, color = Gender), data = df) +
geom_jitter(size = Hours*.05)
############
# Cleaning #
############
# limit outliers
df$Income <- ifelse(df$Income > 150000, 150000, df$Income)
# dummy out factors
sum(is.na(df$Gender))
df$Female <- ifelse(df$Gender == "Female", 1, 0)
df$Gender <- NULL
# marriage status
df$Married <- ifelse(df$Marital == "Married" |
df$Marital == "Married-spouse-absent", 1, 0)
df$Single <- ifelse(df$Marital == "Divorced" |
df$Marital == "Unmarried" |
df$Marital == "Widowed", 1, 0)
df$absent <- ifelse(df$Marital == "Absent", 1, 0)
df$Marital <- NULL
# remove na
df = na.omit(df)
df$Occupation
summ(df$Occupation)
summary(df$Occupation)
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)$prop.r
