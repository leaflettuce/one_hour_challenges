df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
# k-nn predict occupation
library(class)
# split test -train
train <- df[1:1500]
train <- df[ , 1:1500]
# split test -train
train <- df[1:1500, ]
test <- df[1501:2000, ]
y_train <- occupation[1:1500]
y_test <- occupation[1501:2000]
pred <- knn(train = train, test = test, cl = y_train, k = 5)
sum(is.na(occupation))
# remove na
df = as.data.frame(lapply(df, na.omit))
sum(is.na(df))
library(rattle)
library(ggplot2)
df <-audit
#######
# EDA #
#######
str(df)
# remove unneeded cols
df$ID <- NULL
df$RISK_Adjustment <- NULL
df$TARGET_Adjusted <- NULL
df$Education <- NULL
df$Deductions <- NULL
df$Employment <-  NULL
df$IGNORE_Accounts <- NULL
# quick plots
hist(df$Age)
plot(df$Gender)
plot(df$Marital)
ggplot(aes(x = Education), data  = df) +
geom_histogram(stat = "count")
ggplot(aes(x = Occupation), data  = df) +
geom_histogram(stat = "count")
ggplot(aes(x = Income), data = df) +
geom_histogram()
hist(df$Hours)
ggplot(aes(x = Age, y = Income, color = Gender), data = df) +
geom_jitter(size = Hours*.05)
############
# Cleaning #
############
# limit outliers
df$Income <- ifelse(df$Income > 150000, 150000, df$Income)
# dummy out factors
sum(is.na(df$Gender))
df$Female <- ifelse(df$Gender == "Female", 1, 0)
df$Gender <- NULL
# marriage status
df$Married <- ifelse(df$Marital == "Married" |
df$Marital == "Married-spouse-absent", 1, 0)
df$Single <- ifelse(df$Marital == "Divorced" |
df$Marital == "Unmarried" |
df$Marital == "Widowed", 1, 0)
df$absent <- ifelse(df$Marital == "Absent", 1, 0)
df$Marital <- NULL
sum(is.na(df))
df = as.data.frame(lapply(df, na.omit))
# remove na
df = as.data.frame(lapply(df, na.omit))
# remove na
df_new = as.data.frame(lapply(df, na.omit))
df = na.omit(df)
min_max_norm <- function(x) {
return((x - min(x))/(max(x) - min(x)))
}
df[ , c(1,3, 4)] <- lapply(df[ , c(1, 3, 4)], min_max_norm)
occupation <- df$Occupation
df$Occupation <- NULL
str(df)
###########
# Cluster #
###########
# k-means
library(stats)
clusters <- kmeans(df, 5)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
# split test -train
train <- df[1:1400, ]
test <- df[1401:1899, ]
y_train <- occupation[1:1400]
y_test <- occupation[1401:1899]
clusters <- kmeans(df, 3)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
clusters <- kmeans(df, 7)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
clusters <- kmeans(df, 4)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
clusters <- kmeans(df, 6)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
clusters <- kmeans(df, 3)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
clusters <- kmeans(df, 3)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
# split test -train
train <- df[1:1400, ]
test <- df[1401:1899, ]
y_train <- occupation[1:1400]
y_test <- occupation[1401:1899]
# k-nn predict occupation
library(class)
pred <- knn(train = train, test = test, cl = y_train, k = 21)
library(gmodels)
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)
confusionMatrix(pred, y_test)
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)
cor(pred, y_test)
head(CrossTable(x = y_test, y = pred, prop.chisq = FALSE))
pred <- knn(train = train, test = test, cl = y_train, k = 5)
head(CrossTable(x = y_test, y = pred, prop.chisq = FALSE))
pred
head(pred, 10)
head(pred, 15)
head(pred, 13)
head(pred, 8)
head(y_test, 8)
head(CrossTable(x = y_test, y = pred, prop.chisq = FALSE))
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)$prop.row
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)$prop.t
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)$prop.c
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)$prop.r
clusters <- kmeans(df, 14)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
train <- df[1:1400, ]
test <- df[1401:1899, ]
y_train <- occupation[1:1400]
y_test <- occupation[1401:1899]
# k-nn predict occupation
library(class)
library(gmodels)
pred <- knn(train = train, test = test, cl = y_train, k = 5)
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)$prop.r
head(pred, 8)
head(y_test, 8)
clusters <- kmeans(df, 7)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
train <- df[1:1400, ]
test <- df[1401:1899, ]
y_train <- occupation[1:1400]
y_test <- occupation[1401:1899]
# k-nn predict occupation
library(class)
library(gmodels)
pred <- knn(train = train, test = test, cl = y_train, k = 5)
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)$prop.r
head(pred, 8)
head(y_test, 8)
?CrossTable
CrossTable(x = y_test, y = pred, prop.chisq = FALSE, max.width = 5)$prop.r
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)$prop.r
summary(Occupation)
library(rattle)
library(ggplot2)
df <-audit
#######
# EDA #
#######
str(df)
# remove unneeded cols
df$ID <- NULL
df$RISK_Adjustment <- NULL
df$TARGET_Adjusted <- NULL
df$Education <- NULL
df$Deductions <- NULL
df$Employment <-  NULL
df$IGNORE_Accounts <- NULL
# quick plots
hist(df$Age)
plot(df$Gender)
plot(df$Marital)
ggplot(aes(x = Education), data  = df) +
geom_histogram(stat = "count")
ggplot(aes(x = Occupation), data  = df) +
geom_histogram(stat = "count")
ggplot(aes(x = Income), data = df) +
geom_histogram()
hist(df$Hours)
ggplot(aes(x = Age, y = Income, color = Gender), data = df) +
geom_jitter(size = Hours*.05)
############
# Cleaning #
############
# limit outliers
df$Income <- ifelse(df$Income > 150000, 150000, df$Income)
# dummy out factors
sum(is.na(df$Gender))
df$Female <- ifelse(df$Gender == "Female", 1, 0)
df$Gender <- NULL
# marriage status
df$Married <- ifelse(df$Marital == "Married" |
df$Marital == "Married-spouse-absent", 1, 0)
df$Single <- ifelse(df$Marital == "Divorced" |
df$Marital == "Unmarried" |
df$Marital == "Widowed", 1, 0)
df$absent <- ifelse(df$Marital == "Absent", 1, 0)
df$Marital <- NULL
# remove na
df = na.omit(df)
df$Occupation
summ(df$Occupation)
summary(df$Occupation)
CrossTable(x = y_test, y = pred, prop.chisq = FALSE)$prop.r
Cluster_id <- clusters$cluster
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
library(rattle)
library(ggplot2)
df <-audit
#######
# EDA #
#######
str(df)
# remove unneeded cols
df$ID <- NULL
df$RISK_Adjustment <- NULL
df$TARGET_Adjusted <- NULL
df$Education <- NULL
df$Deductions <- NULL
df$Employment <-  NULL
df$IGNORE_Accounts <- NULL
# quick plots
hist(df$Age)
plot(df$Gender)
plot(df$Marital)
ggplot(aes(x = Education), data  = df) +
geom_histogram(stat = "count")
ggplot(aes(x = Occupation), data  = df) +
geom_histogram(stat = "count")
ggplot(aes(x = Income), data = df) +
geom_histogram()
hist(df$Hours)
ggplot(aes(x = Age, y = Income, color = Gender), data = df) +
geom_jitter(size = Hours*.05)
############
# Cleaning #
############
# limit outliers
df$Income <- ifelse(df$Income > 150000, 150000, df$Income)
# dummy out factors
sum(is.na(df$Gender))
df$Female <- ifelse(df$Gender == "Female", 1, 0)
df$Gender <- NULL
# marriage status
df$Married <- ifelse(df$Marital == "Married" |
df$Marital == "Married-spouse-absent", 1, 0)
df$Single <- ifelse(df$Marital == "Divorced" |
df$Marital == "Unmarried" |
df$Marital == "Widowed", 1, 0)
df$absent <- ifelse(df$Marital == "Absent", 1, 0)
df$Marital <- NULL
# remove na
df = na.omit(df)
#############
# normalize #
#############
min_max_norm <- function(x) {
return((x - min(x))/(max(x) - min(x)))
}
df[ , c(1,3, 4)] <- lapply(df[ , c(1, 3, 4)], min_max_norm)
occupation <- df$Occupation
df$Occupation <- NULL
str(df)
###########
# Cluster #
###########
# k-means
library(stats)
clusters <- kmeans(df, 7)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
# k-means
library(stats)
clusters <- kmeans(df, 5)
# examine
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
Cluster_ID <- df$Cluster_id
train <- df[1:1400, ]
test <- df[1401:1899, ]
y_train_cluster <- Cluster_ID[1:1400]
y_test_cluster <- Cluster_ID[1401:1899]
df$Cluster_id <- NULL
train <- df[1:1400, ]
test <- df[1401:1899, ]
y_train <- occupation[1:1400]
y_test <- occupation[1401:1899]
y_train_cluster <- Cluster_ID[1:1400]
y_test_cluster <- Cluster_ID[1401:1899]
pred <- knn(train = train, test = test, cl = y_train_cluster, k = 5)
# k-nn predict occupation
library(class)
library(gmodels)
pred <- knn(train = train, test = test, cl = y_train_cluster, k = 5)
CrossTable(x = y_test_cluster, y = pred, prop.chisq = FALSE)$prop.r
pred <- knn(train = train, test = test, cl = y_train_cluster, k = 3)
CrossTable(x = y_test_cluster, y = pred, prop.chisq = FALSE)$prop.r
# examine
clusters$centers
clusters <- kmeans(df, 5)
clusters$centers
clusters$size
clusters <- kmeans(df, 3)
# examine (1 - )
clusters$centers
clusters$size
clusters <- kmeans(df, 4)
# examine (1 - )
clusters$centers
clusters$size
clusters <- kmeans(df, 6)
# examine (1 - )
clusters$centers
clusters$size
clusters <- kmeans(df, 5)
# examine (1 - )
clusters$centers
clusters$size
clusters <- kmeans(df, 5)
# examine (1 - )
clusters$centers
clusters$size
clusters <- kmeans(df, 5)
# examine (1 - )
clusters$centers
clusters$size
clusters <- kmeans(df, 5)
# examine (1 - )
clusters$centers
clusters$size
clusters <- kmeans(df, 4)
# examine (1 - )
clusters$centers
clusters$size
clusters <- kmeans(df, 4)
# examine (1 - )
clusters$centers
clusters$size
clusters <- kmeans(df, 4)
# examine (1 - )
clusters$centers
clusters$size
clusters <- kmeans(df, 4)
# examine (1 - )
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
clusters <- kmeans(df, 5)
# examine (1 - )
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
clusters <- kmeans(df, 7)
# examine (1 - )
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
# visualize
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
Cluster_ID <- df$Cluster_id
df$Cluster_id <- NULL
# split test -train
train <- df[1:1400, ]
test <- df[1401:1899, ]
# unneeded - tested though
y_train <- occupation[1:1400]
y_test <- occupation[1401:1899]
y_train_cluster <- Cluster_ID[1:1400]
y_test_cluster <- Cluster_ID[1401:1899]
# k-nn predict occupation
library(class)
library(gmodels)
pred <- knn(train = train, test = test, cl = y_train_cluster, k = 5)
CrossTable(x = y_test_cluster, y = pred, prop.chisq = FALSE)$prop.r
# examine (1 - )
clusters$centers
clusters <- kmeans(df, 3)
# examine (1 - )
clusters$centers
clusters$size
df$Cluster_id <- clusters$cluster
ggplot(aes(x = Age, y = Income, color = as.factor(Cluster_id),
shape = as.factor(Female)), data = df) +
geom_jitter(size = 2)
Cluster_ID <- df$Cluster_id
df$Cluster_id <- NULL
# split test -train
train <- df[1:1400, ]
test <- df[1401:1899, ]
# unneeded - tested though
y_train <- occupation[1:1400]
y_test <- occupation[1401:1899]
y_train_cluster <- Cluster_ID[1:1400]
y_test_cluster <- Cluster_ID[1401:1899]
# k-nn predict occupation
library(class)
library(gmodels)
pred <- knn(train = train, test = test, cl = y_train_cluster, k = 5)
CrossTable(x = y_test_cluster, y = pred, prop.chisq = FALSE)$prop.r
head(pred, 8)
head(y_test, 8)
CrossTable(x = y_test_cluster, y = pred, prop.chisq = FALSE)$prop.r
# test to occupation
df$Occupation <- Occupation
# test to occupation
df$Occupation <- occupation
df$cluster_id <- Cluster_ID
aggregate(data = df, Occupation ~ Cluster_ID, count)
aggregate(data = df, Occupation ~ Cluster_ID, count.fields())
?aggregate
aggregate(data = df, Occupation ~ Cluster_ID, sum)
library(plyr)
count(df, c('Occupation','Cluster_ID'))
count(df, c('ClusterID','Occupation'))
count(df, c('ClusterID','Occupation'))
count(df, c('Cluster_ID','Occupation'))
aggregate(data = df, age ~ Cluster_ID, mean)
aggregate(data = df, Age ~ Cluster_ID, mean)
aggregate(data = df, Income ~ Cluster_ID, mean)
